{"version":3,"sources":["candy-machine.ts","Clock.js","Count.js","Home.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CANDY_MACHINE_PROGRAM","anchor","PublicKey","SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID","TOKEN_METADATA_PROGRAM_ID","awaitTransactionSignatureConfirmation","txid","timeout","connection","a","commitment","queryStatus","done","status","slot","confirmations","err","subId","Promise","resolve","reject","setTimeout","console","log","onSignature","result","context","e","error","getSignatureStatuses","signatureStatuses","value","sleep","_signatureSubscriptions","removeSignatureListener","createAssociatedTokenAccountInstruction","associatedTokenAddress","payer","walletAddress","splTokenMintAddress","keys","pubkey","isSigner","isWritable","SystemProgram","programId","TOKEN_PROGRAM_ID","SYSVAR_RENT_PUBKEY","TransactionInstruction","data","Buffer","from","getCandyMachineState","anchorWallet","candyMachineId","provider","preflightCommitment","fetchIdl","idl","program","candyMachine","id","account","fetch","state","itemsAvailable","toNumber","itemsRedeemed","itemsRemaining","goLiveDate","Date","getMasterEdition","mint","findProgramAddress","toBuffer","getMetadata","getTokenWallet","wallet","mintOneToken","config","treasury","Keypair","generate","publicKey","token","metadata","masterEdition","getMinimumBalanceForRentExemption","MintLayout","span","rent","rpc","mintNft","accounts","mintAuthority","updateAuthority","tokenMetadataProgram","tokenProgram","systemProgram","clock","SYSVAR_CLOCK_PUBKEY","signers","instructions","createAccount","fromPubkey","newAccountPubkey","space","lamports","Token","createInitMintInstruction","createMintToInstruction","shortenAddress","address","chars","slice","ms","Clock","props","days","hours","minutes","seconds","this","getTimeUntil","deadline","setInterval","num","time","parse","setState","Math","floor","style","fontSize","marginBottom","display","justifyContent","height","flexFlow","className","leading0","Component","App","ConnectButton","styled","WalletDialogButton","CounterText","MintContainer","div","MintButton","Button","renderCounter","completed","Home","useState","setBalance","isActive","setIsActive","isSoldOut","setIsSoldOut","isMinting","setIsMinting","isReleaseDate","setIsReleaseDate","isConfettiFinised","setIsConfettiFinished","isConfettiShow","setIsConfettiShow","setItemsAvailable","setItemsRedeemed","setItemsRemaining","open","message","severity","undefined","alertState","setAlertState","startDate","setStartDate","useAnchorWallet","setCandyMachine","PlayMintedSound","audio","Audio","play","loop","PlayErrorSound","currentDate","now","refreshCandyMachineState","onMint","mintTxId","txTimeout","msg","code","indexOf","getBalance","balance","LAMPORTS_PER_SOL","useEffect","recycle","autoPlay","muted","src","type","padding","flex","flexDirection","backgroundColor","borderStyle","borderColor","borderTopWidth","borderBottomWidth","borderTopLeftRadius","borderTopRightRadius","alignContent","alignItems","verticalAlign","whiteSpace","marginTop","marginLeft","width","borderRadius","paddingRight","paddingLeft","color","fontWeight","xmlns","fill","viewBox","d","toBase58","Count","animation","marginRight","fontFamily","borderBottomLeftRadius","borderBottomRightRadius","alt","disabled","onClick","variant","lineHeight","CircularProgress","date","onMount","onComplete","renderer","userSelect","textDecoration","textAlign","href","Snackbar","autoHideDuration","onClose","Alert","process","Connection","startDateSeed","parseInt","theme","createTheme","palette","overrides","MuiButtonBase","root","MuiButton","textTransform","startIcon","endIcon","endpoint","useMemo","clusterApiUrl","wallets","getPhantomWallet","getSlopeWallet","getSolflareWallet","getSolletWallet","network","getSolletExtensionWallet","ThemeProvider","autoConnect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a30084b.chunk.js","sourcesContent":["import * as anchor from \"@project-serum/anchor\";\n\nimport {\n  MintLayout,\n  TOKEN_PROGRAM_ID,\n  Token,\n} from \"@solana/spl-token\";\n\nexport const CANDY_MACHINE_PROGRAM = new anchor.web3.PublicKey(\n  \"cndyAnrLdpjq1Ssp1z8xxDsB8dxe7u4HL5Nxi2K5WXZ\"\n);\n\nconst SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID = new anchor.web3.PublicKey(\n  \"ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL\"\n);\n\nconst TOKEN_METADATA_PROGRAM_ID = new anchor.web3.PublicKey(\n  \"metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s\"\n);\n\nexport interface CandyMachine {\n  id: anchor.web3.PublicKey,\n  connection: anchor.web3.Connection;\n  program: anchor.Program;\n}\n\ninterface CandyMachineState {\n  candyMachine: CandyMachine;\n  itemsAvailable: number;\n  itemsRedeemed: number;\n  itemsRemaining: number;\n  goLiveDate: Date,\n}\n\nexport const awaitTransactionSignatureConfirmation = async (\n  txid: anchor.web3.TransactionSignature,\n  timeout: number,\n  connection: anchor.web3.Connection,\n  commitment: anchor.web3.Commitment = \"recent\",\n  queryStatus = false\n): Promise<anchor.web3.SignatureStatus | null | void> => {\n  let done = false;\n  let status: anchor.web3.SignatureStatus | null | void = {\n    slot: 0,\n    confirmations: 0,\n    err: null,\n  };\n  let subId = 0;\n  status = await new Promise(async (resolve, reject) => {\n    setTimeout(() => {\n      if (done) {\n        return;\n      }\n      done = true;\n      console.log(\"Rejecting for timeout...\");\n      reject({ timeout: true });\n    }, timeout);\n    try {\n      subId = connection.onSignature(\n        txid,\n        (result: any, context: any) => {\n          done = true;\n          status = {\n            err: result.err,\n            slot: context.slot,\n            confirmations: 0,\n          };\n          if (result.err) {\n            console.log(\"Rejected via websocket\", result.err);\n            reject(status);\n          } else {\n            console.log(\"Resolved via websocket\", result);\n            resolve(status);\n          }\n        },\n        commitment\n      );\n    } catch (e) {\n      done = true;\n      console.error(\"WS error in setup\", txid, e);\n    }\n    while (!done && queryStatus) {\n      // eslint-disable-next-line no-loop-func\n      (async () => {\n        try {\n          const signatureStatuses = await connection.getSignatureStatuses([\n            txid,\n          ]);\n          status = signatureStatuses && signatureStatuses.value[0];\n          if (!done) {\n            if (!status) {\n              console.log(\"REST null result for\", txid, status);\n            } else if (status.err) {\n              console.log(\"REST error for\", txid, status);\n              done = true;\n              reject(status.err);\n            } else if (!status.confirmations) {\n              console.log(\"REST no confirmations for\", txid, status);\n            } else {\n              console.log(\"REST confirmation for\", txid, status);\n              done = true;\n              resolve(status);\n            }\n          }\n        } catch (e) {\n          if (!done) {\n            console.log(\"REST connection error: txid\", txid, e);\n          }\n        }\n      })();\n      await sleep(2000);\n    }\n  });\n\n  //@ts-ignore\n  if (connection._signatureSubscriptions[subId]) {\n    connection.removeSignatureListener(subId);\n  }\n  done = true;\n  console.log(\"Returning status\", status);\n  return status;\n}\n\n/* export */ const createAssociatedTokenAccountInstruction = (\n  associatedTokenAddress: anchor.web3.PublicKey,\n  payer: anchor.web3.PublicKey,\n  walletAddress: anchor.web3.PublicKey,\n  splTokenMintAddress: anchor.web3.PublicKey\n) => {\n  const keys = [\n    { pubkey: payer, isSigner: true, isWritable: true },\n    { pubkey: associatedTokenAddress, isSigner: false, isWritable: true },\n    { pubkey: walletAddress, isSigner: false, isWritable: false },\n    { pubkey: splTokenMintAddress, isSigner: false, isWritable: false },\n    {\n      pubkey: anchor.web3.SystemProgram.programId,\n      isSigner: false,\n      isWritable: false,\n    },\n    { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n    {\n      pubkey: anchor.web3.SYSVAR_RENT_PUBKEY,\n      isSigner: false,\n      isWritable: false,\n    },\n  ];\n  return new anchor.web3.TransactionInstruction({\n    keys,\n    programId: SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\n    data: Buffer.from([]),\n  });\n}\n\nexport const getCandyMachineState = async (\n  anchorWallet: anchor.Wallet,\n  candyMachineId: anchor.web3.PublicKey,\n  connection: anchor.web3.Connection,\n): Promise<CandyMachineState> => {\n  const provider = new anchor.Provider(connection, anchorWallet, {\n    preflightCommitment: \"recent\",\n  });\n\n  const idl = await anchor.Program.fetchIdl(\n    CANDY_MACHINE_PROGRAM,\n    provider\n  );\n\n  const program = new anchor.Program(idl, CANDY_MACHINE_PROGRAM, provider);\n  const candyMachine = {\n    id: candyMachineId,\n    connection,\n    program,\n  }\n\n  const state: any = await program.account.candyMachine.fetch(candyMachineId);\n\n  const itemsAvailable = state.data.itemsAvailable.toNumber();\n  const itemsRedeemed = state.itemsRedeemed.toNumber();\n  const itemsRemaining = itemsAvailable - itemsRedeemed;\n\n  let goLiveDate = state.data.goLiveDate.toNumber();\n  goLiveDate = new Date(goLiveDate * 1000);\n\n  console.log({\n    itemsAvailable,\n    itemsRedeemed,\n    itemsRemaining,\n    goLiveDate,\n  })\n\n  return {\n    candyMachine,\n    itemsAvailable,\n    itemsRedeemed,\n    itemsRemaining,\n    goLiveDate,\n  };\n}\n\nconst getMasterEdition = async (\n  mint: anchor.web3.PublicKey\n): Promise<anchor.web3.PublicKey> => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [\n        Buffer.from(\"metadata\"),\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\n        mint.toBuffer(),\n        Buffer.from(\"edition\"),\n      ],\n      TOKEN_METADATA_PROGRAM_ID\n    )\n  )[0];\n};\n\nconst getMetadata = async (\n  mint: anchor.web3.PublicKey\n): Promise<anchor.web3.PublicKey> => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [\n        Buffer.from(\"metadata\"),\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\n        mint.toBuffer(),\n      ],\n      TOKEN_METADATA_PROGRAM_ID\n    )\n  )[0];\n};\n\nconst getTokenWallet = async (\n  wallet: anchor.web3.PublicKey,\n  mint: anchor.web3.PublicKey\n) => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [wallet.toBuffer(), TOKEN_PROGRAM_ID.toBuffer(), mint.toBuffer()],\n      SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID\n    )\n  )[0];\n};\n\nexport const mintOneToken = async (\n  candyMachine: CandyMachine,\n  config: anchor.web3.PublicKey, // feels like this should be part of candyMachine?\n  payer: anchor.web3.PublicKey,\n  treasury: anchor.web3.PublicKey,\n): Promise<string> => {\n  const mint = anchor.web3.Keypair.generate();\n  const token = await getTokenWallet(payer, mint.publicKey);\n  const { connection, program } = candyMachine;\n  const metadata = await getMetadata(mint.publicKey);\n  const masterEdition = await getMasterEdition(mint.publicKey);\n\n  const rent = await connection.getMinimumBalanceForRentExemption(\n    MintLayout.span\n  );\n\n  return await program.rpc.mintNft({\n    accounts: {\n      config,\n      candyMachine: candyMachine.id,\n      payer: payer,\n      wallet: treasury,\n      mint: mint.publicKey,\n      metadata,\n      masterEdition,\n      mintAuthority: payer,\n      updateAuthority: payer,\n      tokenMetadataProgram: TOKEN_METADATA_PROGRAM_ID,\n      tokenProgram: TOKEN_PROGRAM_ID,\n      systemProgram: anchor.web3.SystemProgram.programId,\n      rent: anchor.web3.SYSVAR_RENT_PUBKEY,\n      clock: anchor.web3.SYSVAR_CLOCK_PUBKEY,\n    },\n    signers: [mint],\n    instructions: [\n      anchor.web3.SystemProgram.createAccount({\n        fromPubkey: payer,\n        newAccountPubkey: mint.publicKey,\n        space: MintLayout.span,\n        lamports: rent,\n        programId: TOKEN_PROGRAM_ID,\n      }),\n      Token.createInitMintInstruction(\n        TOKEN_PROGRAM_ID,\n        mint.publicKey,\n        0,\n        payer,\n        payer\n      ),\n      createAssociatedTokenAccountInstruction(\n        token,\n        payer,\n        payer,\n        mint.publicKey\n      ),\n      Token.createMintToInstruction(\n        TOKEN_PROGRAM_ID,\n        mint.publicKey,\n        token,\n        payer,\n        [],\n        1\n      ),\n    ],\n  });\n}\n\nexport const shortenAddress = (address: string, chars = 4): string => {\n  return `${address.slice(0, chars)}...${address.slice(-chars)}`;\n};\n\nconst sleep = (ms: number): Promise<void> => {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}","import React, { Component } from \"react\";\r\nimport './index.css';\r\n\r\n\r\nvar isCompletedCounting;\r\n\r\nclass Clock extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      days: 0,\r\n      hours: 0,\r\n      minutes: 0,\r\n      seconds: 0\r\n    };\r\n  }\r\n  componentWillMount() {\r\n    this.getTimeUntil(this.props.deadline);\r\n  }\r\n  componentDidMount() {\r\n    setInterval(() => this.getTimeUntil(this.props.deadline), 1000);\r\n  }\r\n  leading0(num) {\r\n    return num < 10 ? \"0\" + num : num;\r\n  }\r\n  getTimeUntil(deadline) {\r\n    const time = Date.parse(deadline) - Date.parse(new Date());\r\n    if (time < 0) {\r\n    isCompletedCounting = true;\r\n      this.setState({ days: 0, hours: 0, minutes: 0, seconds: 0 });\r\n    } else {\r\n      const seconds = Math.floor((time / 1000) % 60);\r\n      const minutes = Math.floor((time / 1000 / 60) % 60);\r\n      const hours = Math.floor((time / (1000 * 60 * 60)) % 24);\r\n      const days = Math.floor(time / (1000 * 60 * 60 * 24));\r\n      this.setState({ days, hours, minutes, seconds });\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n        <div style={{fontSize: \"0.6rem\", marginBottom:\"14px\"}}>\r\n        <div >\r\n     \r\n            <p style={{display:\"flex\", justifyContent:\"center\", marginBottom:5}}>\r\n              TIME LEFT TO START MINTING:</p>\r\n        </div>\r\n\r\n      <div style={{height: \"1rem\", display:\"flex\", justifyContent:'center', flexFlow:\"row\", marginBottom:0}}>\r\n        <div className=\"Clock-days\">{this.leading0(this.state.days)} DAYS &nbsp;</div>\r\n        <div className=\"Clock-hours\">\r\n          {this.leading0(this.state.hours)} HOURS &nbsp;\r\n        </div>\r\n        <div className=\"Clock-minutes\">\r\n          {this.leading0(this.state.minutes)} MINUTES &nbsp;\r\n        </div>\r\n        <div className=\"Clock-seconds\">\r\n          {this.leading0(this.state.seconds)} SECONDS\r\n        </div>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Clock;\r\n","import React, { Component } from \"react\";\r\nimport Clock from \"./Clock\";\r\nimport './index.css';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { deadline: \"DECEMBER, 07, 2021, 05:30:00 EST\" }; //MINTING DATE !\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"App\" id=\"timerText\">\r\n        {/* <div className=\"App-title\">Countdown Timer</div> */}\r\n        <Clock deadline={this.state.deadline} />\r\n        {/* <div style={{fontSize:\"0.6rem\"}}>{this.state.deadline}</div> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import React, { Component }  from 'react';\nimport { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Countdown from \"react-countdown\";\nimport { Button, CircularProgress, Snackbar } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport Confetti from \"react-confetti\";\n\n\n//timer\nimport Count from \"./Count\";\nimport Clock from \"./Clock\";\n//==>\n\nimport * as anchor from \"@project-serum/anchor\";\n\nimport { LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n\nimport { useAnchorWallet } from \"@solana/wallet-adapter-react\";\nimport { WalletDialogButton } from \"@solana/wallet-adapter-material-ui\";\n\nimport {\n  CandyMachine,\n  awaitTransactionSignatureConfirmation,\n  getCandyMachineState,\n  mintOneToken,\n  shortenAddress,\n} from \"./candy-machine\";\nimport { green } from '@material-ui/core/colors';\nimport { SentimentVerySatisfied, SportsRugbySharp, WbIncandescentTwoTone } from '@material-ui/icons';\nimport { isRegularExpressionLiteral } from 'typescript';\n\n\n\n\nconst ConnectButton = styled(WalletDialogButton)``;\n\nconst CounterText = styled.span``; // add your styles here\n\nconst MintContainer = styled.div``; // add your styles here\n\nconst MintButton = styled(Button)``; // add your styles here\n\nexport interface HomeProps {\n  candyMachineId: anchor.web3.PublicKey;\n  config: anchor.web3.PublicKey;\n  connection: anchor.web3.Connection;\n  startDate: number;\n  treasury: anchor.web3.PublicKey;\n  txTimeout: number;\n}\n\nconst Home = (props: HomeProps) => {\n  const [balance, setBalance] = useState<number>();\n  const [isActive, setIsActive] = useState(false); // true when countdown completes\n  const [isSoldOut, setIsSoldOut] = useState(false); // true when items remaining is zero\n  const [isMinting, setIsMinting] = useState(false); // true when user got to press MINT\n  // const [isConnected, setIsConnected] = useState(false); // true when Wallet connects\n  const [isReleaseDate, setIsReleaseDate] = useState(false);   \n  const [isConfettiFinised, setIsConfettiFinished] = useState(false);\n  const [isConfettiShow, setIsConfettiShow] = useState(false);\n\n\n  const [itemsAvailable, setItemsAvailable] = useState(0);\n  const [itemsRedeemed, setItemsRedeemed] = useState(0);\n  const [itemsRemaining, setItemsRemaining] = useState(0);\n\n  const [alertState, setAlertState] = useState<AlertState>({\n    open: false,\n    message: \"\",\n    severity: undefined,\n  });\n\n  const [startDate, setStartDate] = useState(new Date(props.startDate));\n\n  const wallet = useAnchorWallet();\n  const [candyMachine, setCandyMachine] = useState<CandyMachine>();\n\n   //My vars\n   var connectedText = \"CHANGE WALLET\";\n   var isPlayedConnectSound = false;\n\n \n   // FOR AUDIO ! UPLOAD TO GOOGLE DRIVE AND SHARE. COPY ID AND USE THIS LINK SEE EXMPALE BELOW:\n   //https://docs.google.com/uc?export=open&id=[ID]\n\n   \n  \n \n   function PlayConnectedSound(){\n     var audio = new Audio(\"https://docs.google.com/uc?export=open&id=1OgM-uql5KeYYC8lxNUabKt3dsdLjqUQn\");\n     audio.loop = false;\n     audio.play();\n     isPlayedConnectSound = true;\n     \n   }\n \n   function PlayMintedSound(){\n     var audio = new Audio(\"https://docs.google.com/uc?export=open&id=1Ta3HBeLrKBAN6MiwpJIp0bw7N2KAaeD6\");\n     audio.play();\n     audio.loop = false;\n\n     if(!isConfettiFinised){\n     \n      setIsConfettiShow(true);\n      setIsConfettiFinished(true);\n      console.log(\"confetti finished: \"+isConfettiFinised);\n\n      setTimeout(() => {\n        setIsConfettiFinished(false);\n        console.log(\"confetti finished: \"+isConfettiFinised);\n      }, 5000);\n\n      setTimeout(() => {\n        setIsConfettiShow(false);\n        console.log(\"confetti finished show: \"+isConfettiShow);\n      }, 12000);}\n      \n     \n  \n      \n    \n    \n   \n   \n\n   }\n\n \n   function PlayErrorSound(){\n     var audio = new Audio(\"https://docs.google.com/uc?export=open&id=1W9YaojgV3B1j0g_1jiJ5En48yQOrOa1u\");\n     audio.play();\n     audio.loop = false;\n   }\n\n//HIDE TIMER IF RELEASE DATE HAS BEEN REACHED\n\n   //check release date switch\n  //  var isReleaseDate = false;\n\n   //date to start minting:\n  //  EDIT BELOW !!!!!:\n   var dateToRelease = 1638873000; //timestamp in seconds from metaplex cache can ref via process.env.REACT_APPname but this is better\n// ///////////////////////\n// end\n\n   //today date in seconds (timestamp)\n   var currentDate = Math.floor(Date.now() / 1000);\n\n  //check function if meatch than enable bool isCompletedCounting\n   function CheckDates(){\n     \n     if(currentDate >= dateToRelease ){\n     setIsReleaseDate(true);\n     console.log(\"TODAY TIMESTAMP: \"+currentDate);\n     console.log(\"MATCH OR ABOVE TIMESTAMP TO HIDE CLOCK: \"+dateToRelease);\n     console.log(\"Switch isReleaseDate: \"+isReleaseDate);\n     \n     } else {\n      setIsReleaseDate(false);\n\n      console.log(\"TODAY TIMESTAMP: \"+currentDate);\n      console.log(\"MATCH OR ABOVE TIMESTAMP TO HIDE CLOCK: \"+dateToRelease);\n      console.log(\"Switch isReleaseDate: \"+isReleaseDate);\n      \n    }\n     \n\n\n   }\n\n//  -->\n\n  const refreshCandyMachineState = () => {\n    (async () => {\n\n      \n      \n      if (!wallet) return;\n      isPlayedConnectSound=true;\n\n      const {\n        candyMachine,\n        goLiveDate,\n        itemsAvailable,\n        itemsRemaining,\n        itemsRedeemed,\n      } = await getCandyMachineState(\n        wallet as anchor.Wallet,\n        props.candyMachineId,\n        props.connection\n      );\n\n      setItemsAvailable(itemsAvailable);\n      setItemsRemaining(itemsRemaining);\n      setItemsRedeemed(itemsRedeemed);\n\n      setIsSoldOut(itemsRemaining === 0);\n      setStartDate(goLiveDate);\n      setCandyMachine(candyMachine);\n    })();\n  };\n\n  const onMint = async () => {\n    try {\n      setIsMinting(true);\n      if (wallet && candyMachine?.program) {\n        const mintTxId = await mintOneToken(\n          candyMachine,\n          props.config,\n          wallet.publicKey,\n          props.treasury\n        );\n\n        const status = await awaitTransactionSignatureConfirmation(\n          mintTxId,\n          props.txTimeout,\n          props.connection,\n          \"singleGossip\",\n          false\n        );\n\n        if (!status?.err) {\n          setAlertState({\n            open: true,\n            message: \"Congratulations! Mint succeeded!\",\n            severity: \"success\",\n          });\n          PlayMintedSound();\n          \n          \n        } else {\n          setAlertState({\n            open: true,\n            message: \"Mint failed! Please try again!\",\n            severity: \"error\",\n          }); \n          PlayErrorSound();\n        }\n      }\n    } catch (error: any) {\n      \n                PlayErrorSound();\n\n                \n\n\n      let message = error.msg || \"Minting failed! Please try again!\";\n      if (!error.msg) {\n        if (error.message.indexOf(\"0x138\")) {\n        } else if (error.message.indexOf(\"0x137\")) {\n          message = `SOLD OUT!`;\n        } else if (error.message.indexOf(\"0x135\")) {\n          message = `Insufficient funds to mint. Please fund your wallet.`;\n        }\n      } else {\n        if (error.code === 311) {\n          message = `SOLD OUT!`;\n          setIsSoldOut(true);\n        } else if (error.code === 312) {\n          message = `Minting period hasn't started yet.`;\n        }\n      }\n\n      setAlertState({\n        open: true,\n        message,\n        severity: \"error\",\n      });\n    } finally {\n      if (wallet) {\n        const balance = await props.connection.getBalance(wallet.publicKey);\n        setBalance(balance / LAMPORTS_PER_SOL);\n        \n      }\n      setIsMinting(false);\n      refreshCandyMachineState();\n      \n      \n    }\n  };\n\n  useEffect(() => {     \n    (async () => { \n     \n      if (wallet) {\n        const balance = await props.connection.getBalance(wallet.publicKey);\n        setBalance(balance / LAMPORTS_PER_SOL);\n        CheckDates();\n        \n         \n            \n          // isPlayedConnectSound = true;\n        \n\n      }\n    })();\n  }, [wallet, props.connection]);\n\n  useEffect(refreshCandyMachineState, [\n    wallet,\n    props.candyMachineId,\n    props.connection,\n  ]);\n\n\n\n \n\n  return (\n\n    //HERE STARTS THE CODE OF WEBSITE LAYOUT - index.css for body styling etc. -->\n  \n    \n    <main \n      style={{ \n        // backgroundColor: \"pink\", \n\n        display: \"flex\", \n        // justifyContent:\"center\",\n        // alignContent:\"center\",\n        height: \"100%\",\n      }}\n    >\n\n      {/* Confetti */}\n      {isConfettiShow?(<Confetti recycle={isConfettiFinised}/>):\"\"}\n\n      {/* SVideo as BG */}\n\n      <video autoPlay muted loop id=\"myVideo\">\n        <source src=\"https://docs.google.com/uc?export=open&id=1ucl678oBuxbqP2W2BL0hiKKaep_UzF1A\" \n        type=\"video/mp4\"></source>\n      </video>\n\n      {/* TO REMOVE SCROLL BAR FROM MAIN WHEN ADDED PADDING ! */}\n    <div \n      style={{\n        padding: 30, \n        display: \"flex\", \n        flex: 1,\n        flexDirection: \"column\",\n        // justifyContent:\"center\",\n        \n      }}\n    >\n        {/* TOP CONTENT */}\n        <div \n          style={{\n            // backgroundColor: \"green\",\n            backgroundColor: \"rgba(52, 52, 52, 0.8)\",\n            borderStyle:\"solid\",\n            borderColor:\"rgba(18, 19, 18, 0.8)\",\n            borderTopWidth: \"3px\",\n            borderBottomWidth: \"0px\",\n\n            borderTopLeftRadius: \"10px\",\n            borderTopRightRadius: \"10px\",\n\n\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignContent: \"center\",\n            alignItems:\"center\",\n            verticalAlign: \"center\"\n          }}\n        >\n          {/* CONTENT */}\n\n\n\n{/* HEADER */}\n  {/* WALLET TEXT AND SYMBOL ONCE CONNECTED */}\n          {wallet && (\n          <div \n          className=\"walletP\"\n          style={{\n            \n            display:\"flex\", \n            justifyContent:\"center\", \n            alignContent:\"center\",\n           whiteSpace:\"normal\", \n           flexDirection:\"row\",\n           marginTop: \"5px\",\n                marginLeft: \"5px\",\n            }} \n          >\n        \n            {/* wallet symbol */}\n          <div style={{\n            width:155, \n            height:45, \n            backgroundColor:\"rgba(0, 0, 0, 0.4)\", \n            borderRadius:10,\n            display:\"flex\",\n            justifyContent:\"center\",\n            alignContent:\"center\",\n            alignItems:\"center\"\n        \n          }}\n          > \n          {<svg style={{paddingRight: 10, paddingLeft:0, color:'yellowgreen',fontWeight:\"bold\"}} xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" fill=\"currentColor\" className=\"bi bi-wallet2\" viewBox=\"0 0 16 16\">\n          <path d=\"M12.136.326A1.5 1.5 0 0 1 14 1.78V3h.5A1.5 1.5 0 0 1 16 4.5v9a1.5 1.5 0 0 1-1.5 1.5h-13A1.5 1.5 0 0 1 0 13.5v-9a1.5 1.5 0 0 1 1.432-1.499L12.136.326zM5.562 3H13V1.78a.5.5 0 0 0-.621-.484L5.562 3zM1.5 4a.5.5 0 0 0-.5.5v9a.5.5 0 0 0 .5.5h13a.5.5 0 0 0 .5-.5v-9a.5.5 0 0 0-.5-.5h-13z\"/>\n          </svg>}\n          {/* wallet addresss short */}\n          <span className=\"walletText\">{\" \"+shortenAddress(wallet.publicKey.toBase58() || \"\")}</span>\n          </div> \n          </div>)\n          }\n\n          {/* separate button and wallet and display timer in middle */}\n\n          <div\n          \n          >\n            {wallet && <div style={{\n          width:300, \n          height:45, \n          backgroundColor:\"rgba(0, 0, 0, 0.4)\", \n          borderRadius:10,\n          display:\"flex\",\n          justifyContent:\"center\",\n          alignContent:\"center\",\n          alignItems:\"center\",\n          marginTop: \"5px\",\n        \n          }}\n          > \n             <Count/>\n          \n            </div>}\n\n            </div>\n         \n\n{/* Connect Wallet Button on Right */}\n\n          <ConnectButton id=\"connectButtonStyle\"\n            style={wallet?\n              {\n                backgroundColor:\"rgb(106, 139, 16)\", \n                animation: \"null\",\n                marginTop: \"5px\",\n                marginRight: \"5px\",\n                fontFamily: 'Aclonica',\n              }\n            :\n            {\n                marginTop: \"5px\",\n                marginRight: \"5px\",\n            }}\n          >\n            {wallet ? (connectedText) : \"CONNECT SOLANA WALLET\"}\n         \n\n          </ConnectButton>\n          \n\n        </div>\n\n        {/* BOTTOM CONTENT WHOLE SCREEN */}\n        <div \n          style={{\n            // backgroundColor: \"blue\",\n            \n            backgroundColor: \"rgba(52, 52, 52, 0.8)\",\n            borderBottomLeftRadius: \"10px\",\n            borderBottomRightRadius: \"10px\",\n            borderStyle:\"solid\",\n            borderColor:\"rgba(18, 19, 18, 0.8)\",\n            borderBottomWidth: \"5px\",\n            borderTopWidth: \"0px\",\n\n            flex: 1,\n\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            flexDirection: \"column\",\n          }}\n        >\n          {/* CONTENT */}\n\n\n          <img src=\"https://picsum.photos/450/200\" alt=\"Some Description\" className=\"mainPicture\" />\n\n\n          <MintContainer style={{marginBottom:15, display:\"flex\", justifyContent:\"center\", flexDirection:\"column\" }}>\n            \n              <MintButton\n               id={isActive && wallet && !isSoldOut ?\"mintButtonStyle\":\"noStyle\"}\n               disabled={isSoldOut || isMinting || !isActive || !wallet || !isReleaseDate}\n               onClick={onMint}\n               variant=\"contained\"\n               style={{display:\"flex\", justifyContent:\"center\", alignContent:\"center\", alignItems:\"center\", verticalAlign:\"center\", fontWeight:\"normal\", fontFamily: 'Aclonica', lineHeight:1.2, fontSize:\"1.2rem\"}}\n              >\n              { !wallet ? (\n                \"WAITING FOR SOLANA WALLET CONNECTION\"\n              ): isSoldOut ? (\n              \"SOLD OUT !\"\n              ) : !isReleaseDate ? ( //ADD NFTS AND TEST THIS !\n                \"MINTING PERIOD NOT STARTED YET !\"\n                ): isActive ? (\n              isMinting ? (\n                <CircularProgress />\n              ) :  (\n                \"MINT ME !\"\n              )\n              ) : (\n                <Countdown\n                  date={startDate}\n                  onMount={({ completed }) => completed && setIsActive(true)}\n                  onComplete={() => setIsActive(true)}\n                  renderer={renderCounter}\n                />\n              )}\n            </MintButton>\n            <p style={{userSelect:\"none\",display:\"flex\", justifyContent:\"center\", marginTop:10,marginBottom:0,fontSize:\"0.7rem\", color:\"aquamarine\"}}>\n              CHRISTMAS PRICE: 0.25 SOL &nbsp;\n              <span style={{textDecoration:\"line-through\", color:\"violet\"}}>NORMAL PRICE: 0.50 SOL</span>&nbsp;</p>\n          </MintContainer>\n\n\n          <div style={{display: \"flex\", justifyContent: \"center\", userSelect:\"none\"}}>\n\n            {/* {wallet && <p>Balance: {(balance || 0).toLocaleString()} SOL</p>} */}\n\n            {wallet && <p className=\"supplyText\"\n            \n            >TOTAL COLLECTION SUPPLY REDEEMED: {itemsRedeemed}/{itemsAvailable}</p>}\n\n            {/* if wallet connected show counter of start minting date */}\n            {/* {wallet && <p>Time Remaining: {<Countdown\n            date={startDate}\n            onMount={({ completed }) => completed && setIsActive(true)}\n            onComplete={() => setIsActive(true)}\n            renderer={renderCounter}\n            />}</p>} */}\n\n            {/* {wallet && <p>Remaining NFTs: {itemsRemaining}</p>} */}\n\n          </div>\n\n            {/* DESCRIPTION */}\n            {/* was bgcolor red */}\n<div style={{display:\"flex\",justifyContent:\"center\"}}> \n        <div style={{width:\"80%\",\n      }}>\n          <p style={{userSelect:\"none\", display:\"flex\", justifyContent:'center', alignItems:\"center\", textAlign:\"center\", lineHeight:1.28}}>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut \n          labore et dolore magna aliqua. Urna id volutpat lacus laoreet. Venenatis urna cursus eget nunc \n          scelerisque. Nec sagittis aliquam malesuada bibendum arcu vitae elementum curabitur. Lacus \n          laoreet non curabitur gravida arcu ac tortor. Porttitor eget dolor morbi non arcu risus quis. \n          Id diam maecenas ultricies mi eget mauris pharetra. Netus et malesuada fames ac turpis. \n          At tempor commodo ullamcorper a lacus vestibulum sed. Ac felis donec et odio pellentesque. \n          aucibus scelerisque eleifend donec pretium vulputate sapien nec sagittis. Quis viverra nibh \n          cras pulvinar mattis nunc sed blandit libero. Nunc vel risus commodo viverra maecenas accumsan \n          lacus. Pulvinar etiam non quam lacus suspendisse faucibus interdum posuere lorem. A lacus \n          vestibulum sed arcu non odio euismod lacinia at. Proin sed libero enim sed faucibus turpis \n          in eu. Vel pretium lectus quam id leo in vitae. Eu volutpat odio facilisis mauris sit.\n            \n          </p>\n          \n        </div>\n        \n\n      \n</div>\n    {/*-->  */}\n\n{/* FOOTER */}\n\n    <div className=\"footer\">\n\n{/* discord logo */}\n  <div className=\"roundedFooterSocial\">\n  <a href=\"http://discord.com\" style={{color:\"white\", display:\"flex\", justifyContent:\"center\", alignItems:\"center\"}}>\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"currentColor\" className=\"bi bi-discord footerButtonDiscord\" viewBox=\"0 0 16 16\">\n      <path d=\"M13.545 2.907a13.227 13.227 0 0 0-3.257-1.011.05.05 0 0 0-.052.025c-.141.25-.297.577-.406.833a12.19 12.19 0 0 0-3.658 0 8.258 8.258 0 0 0-.412-.833.051.051 0 0 0-.052-.025c-1.125.194-2.22.534-3.257 1.011a.041.041 0 0 0-.021.018C.356 6.024-.213 9.047.066 12.032c.001.014.01.028.021.037a13.276 13.276 0 0 0 3.995 2.02.05.05 0 0 0 .056-.019c.308-.42.582-.863.818-1.329a.05.05 0 0 0-.01-.059.051.051 0 0 0-.018-.011 8.875 8.875 0 0 1-1.248-.595.05.05 0 0 1-.02-.066.051.051 0 0 1 .015-.019c.084-.063.168-.129.248-.195a.05.05 0 0 1 .051-.007c2.619 1.196 5.454 1.196 8.041 0a.052.052 0 0 1 .053.007c.08.066.164.132.248.195a.051.051 0 0 1-.004.085 8.254 8.254 0 0 1-1.249.594.05.05 0 0 0-.03.03.052.052 0 0 0 .003.041c.24.465.515.909.817 1.329a.05.05 0 0 0 .056.019 13.235 13.235 0 0 0 4.001-2.02.049.049 0 0 0 .021-.037c.334-3.451-.559-6.449-2.366-9.106a.034.034 0 0 0-.02-.019Zm-8.198 7.307c-.789 0-1.438-.724-1.438-1.612 0-.889.637-1.613 1.438-1.613.807 0 1.45.73 1.438 1.613 0 .888-.637 1.612-1.438 1.612Zm5.316 0c-.788 0-1.438-.724-1.438-1.612 0-.889.637-1.613 1.438-1.613.807 0 1.451.73 1.438 1.613 0 .888-.631 1.612-1.438 1.612Z\"/>\n    </svg>\n    </a>\n  </div>\n\n\n{/* twitter logo */}\n  <div className=\"roundedFooterSocial\">\n    <a href=\"http://twitter.com\" style={{color:\"white\", display:\"flex\", justifyContent:\"center\", alignItems:\"center\"}}>\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"currentColor\" className=\"bi bi-twitter footerButtonTwitter\" viewBox=\"0 0 16 16\">\n      <path d=\"M5.026 15c6.038 0 9.341-5.003 9.341-9.334 0-.14 0-.282-.006-.422A6.685 6.685 0 0 0 16 3.542a6.658 6.658 0 0 1-1.889.518 3.301 3.301 0 0 0 1.447-1.817 6.533 6.533 0 0 1-2.087.793A3.286 3.286 0 0 0 7.875 6.03a9.325 9.325 0 0 1-6.767-3.429 3.289 3.289 0 0 0 1.018 4.382A3.323 3.323 0 0 1 .64 6.575v.045a3.288 3.288 0 0 0 2.632 3.218 3.203 3.203 0 0 1-.865.115 3.23 3.23 0 0 1-.614-.057 3.283 3.283 0 0 0 3.067 2.277A6.588 6.588 0 0 1 .78 13.58a6.32 6.32 0 0 1-.78-.045A9.344 9.344 0 0 0 5.026 15z\"/>\n    </svg>\n    </a>\n  </div>\n\n  {/* telegram logo */}\n  <div className=\"roundedFooterSocial\">\n  <a href=\"http://telegram.com\" style={{color:\"white\", display:\"flex\", justifyContent:\"center\", alignItems:\"center\"}}>\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"currentColor\" className=\"bi bi-telegram footerButtonTelegram\" viewBox=\"0 0 16 16\">\n      <path d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM8.287 5.906c-.778.324-2.334.994-4.666 2.01-.378.15-.577.298-.595.442-.03.243.275.339.69.47l.175.055c.408.133.958.288 1.243.294.26.006.549-.1.868-.32 2.179-1.471 3.304-2.214 3.374-2.23.05-.012.12-.026.166.016.047.041.042.12.037.141-.03.129-1.227 1.241-1.846 1.817-.193.18-.33.307-.358.336a8.154 8.154 0 0 1-.188.186c-.38.366-.664.64.015 1.088.327.216.589.393.85.571.284.194.568.387.936.629.093.06.183.125.27.187.331.236.63.448.997.414.214-.02.435-.22.547-.82.265-1.417.786-4.486.906-5.751a1.426 1.426 0 0 0-.013-.315.337.337 0 0 0-.114-.217.526.526 0 0 0-.31-.093c-.3.005-.763.166-2.984 1.09z\"/>\n    </svg>\n  </a>\n  </div>\n\n</div>\n\n\n\n{/* END FOOTER */}\n\n    </div>\n\n\n\n\n      <Snackbar\n        open={alertState.open}\n        autoHideDuration={6000}\n        onClose={() => setAlertState({ ...alertState, open: false })}\n      >\n        <Alert\n          onClose={() => setAlertState({ ...alertState, open: false })}\n          severity={alertState.severity}\n        >\n          {alertState.message}\n        </Alert>\n      </Snackbar>\n    </div>\n\n    {/* Confetti */}\n\n\n    </main>\n  );\n};\n\ninterface AlertState {\n  open: boolean;\n  message: string;\n  severity: \"success\" | \"info\" | \"warning\" | \"error\" | undefined;\n}\n\nconst renderCounter = ({ days, hours, minutes, seconds, completed }: any) => {\n  return (\n    <CounterText>\n      {hours + (days || 0) * 24} hours, {minutes} minutes, {seconds} seconds\n    </CounterText>\n  );\n};\n\n\nexport default Home;\n","import React, { Component }  from 'react';\nimport \"./App.css\";\nimport { useMemo } from \"react\";\n\nimport Home from \"./Home\";\n\nimport * as anchor from \"@project-serum/anchor\";\nimport { clusterApiUrl } from \"@solana/web3.js\";\nimport { WalletAdapterNetwork } from \"@solana/wallet-adapter-base\";\nimport {\n  getPhantomWallet,\n  getSlopeWallet,\n  getSolflareWallet,\n  getSolletWallet,\n  getSolletExtensionWallet,\n} from \"@solana/wallet-adapter-wallets\";\n\nimport {\n  ConnectionProvider,\n  WalletProvider,\n} from \"@solana/wallet-adapter-react\";\n\nimport { WalletDialogProvider } from \"@solana/wallet-adapter-material-ui\";\nimport { createTheme, ThemeProvider } from \"@material-ui/core\";\n\nconst treasury = new anchor.web3.PublicKey(\n  process.env.REACT_APP_TREASURY_ADDRESS!\n);\n\nconst config = new anchor.web3.PublicKey(\n  process.env.REACT_APP_CANDY_MACHINE_CONFIG!\n);\n\nconst candyMachineId = new anchor.web3.PublicKey(\n  process.env.REACT_APP_CANDY_MACHINE_ID!\n);\n\nconst network = process.env.REACT_APP_SOLANA_NETWORK as WalletAdapterNetwork;\n\nconst rpcHost = process.env.REACT_APP_SOLANA_RPC_HOST!;\nconst connection = new anchor.web3.Connection(rpcHost);\n\nconst startDateSeed = parseInt(process.env.REACT_APP_CANDY_START_DATE!, 10);\n\nconst txTimeout = 30000; // milliseconds (confirm this works for your project)\n\nconst theme = createTheme({\n    palette: {\n        type: 'dark',\n    },\n    overrides: {\n        MuiButtonBase: {\n            root: {\n                justifyContent: 'flex-start',\n            },\n        },\n        MuiButton: {\n            root: {\n                textTransform: undefined,\n                padding: '12px 16px',\n            },\n            startIcon: {\n                marginRight: 8,\n            },\n            endIcon: {\n                marginLeft: 8,\n            },\n        },\n    },\n});\n\nconst App = () => {\n  const endpoint = useMemo(() => clusterApiUrl(network), []);\n\n  const wallets = useMemo(\n    () => [\n        getPhantomWallet(),\n        getSlopeWallet(),\n        getSolflareWallet(),\n        getSolletWallet({ network }),\n        getSolletExtensionWallet({ network })\n    ],\n    []\n  );\n\n  return (\n      <ThemeProvider theme={theme}>\n        <ConnectionProvider endpoint={endpoint}>\n          <WalletProvider wallets={wallets} autoConnect={true}>\n            <WalletDialogProvider>\n              <Home\n                candyMachineId={candyMachineId}\n                config={config}\n                connection={connection}\n                startDate={startDateSeed}\n                treasury={treasury}\n                txTimeout={txTimeout}\n              />\n            </WalletDialogProvider>\n          </WalletProvider>\n        </ConnectionProvider>\n      </ThemeProvider>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Home from \"./Home\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />,\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}